-->//basic program in c 

//print hello world program:

#include<stdio.h>
int main()
{
printf("hello world!");
result 0;
}

-->// three types of datatypes:
1.built in primitive
2.derived 
3.user define

-->// built in primitive types
1.Integral--(int,char)
2.boolean
3.floating point--(float,double)

-->//Derived datatype
1.array
2.pointers

-->//user define datatype
1.structure
2.enumeration
3.union

-->//variables and literals declaration  in c program 

#include <stdio.h>
int main() {
 int a=4;
 char b='$';
 float c=35.43f;
 printf("%d \n %c \n %0.2f",a,b,c);
  return 0;
}

output:
4 
 36 
 35.43

-->Aritmetic operation (+,-,*,/,%)

Addtion program
#include <stdio.h>
int main() {
int a,b,c;
float x;
printf("\nenter a value A:");
scanf("%d",&a);
printf("\nenter a value B:");
scanf("%d",&b);
c=a+b;
printf("\ntotal:%d",c);
c=a-b;
printf("\nSum:%d",c);
c=a*b;
printf("\nmul:%d",c);
x=(float)a/(float)b; //--->(float) is represent for accurate output value
printf("\ndiv:%0.2f",x);
c=a%b;
printf("\nMod:%d",c);
  return 0;
}

output:
enter a value A:123
enter a value B:10
total:133
Sum:113
mul:1230
div:12.30
Mod:3


-->ASSIGNMENT OPERATOR IN C(=,+=,-=,*=,/=,%=)

EXAMPLE CODE:

#include <stdio.h>
int main() {
int a=10,b=5,c=7;
//assignment operation
a+=10;
printf("\n A:%d",a);
b-=10;
printf("\n B:%d",b);
c*=2;
printf("\n C:%d",c);
    return 0;
}
OUTPUT:
A:20
 B:-5
 C:14

-->RELATION OPERATOR(==,<,>,!=,<=,>=)
Relational operators in C, such as “less than”, “greater than”, “less than or equal to”, “greater than or equal to”, “equal to”, and “not equal to”, play a pivotal role in comparing values.

EXAMPLE CODE:

#include <stdio.h>
int main() {
int a=10,b=5;
printf("\n grater than :%d", a>b);
printf("\n less than :%d", a<b);
printf("\n grater than or equal :%d", a>=b);
printf("\n less than or equal :%d", a<=b);
    return 0;
}

OUTPUT:

grater than :1
 less than :0
 grater than or equal :1
 less than or equal :0


-->LOGICAL OPERATOR--(&&,||,!)
1.&&--LOGICAL AND,
2.||--LOGICAL ORT,
3.! --LOGICAL NOT.

--EXAMPLE CODE:
#include <stdio.h>
int main() {
int a=76;
printf("\n logical AND :%d",(a>=35 && a<=100));
printf("\n logical OR :%d",(a>=35 || a<=100));
printf("\n logical NOT :%d",!(a>=35));
return 0;
}

OUTPUT:

logical AND :1
 logical OR :1
 logical NOT :0

-->increment and decrement operation 

1.a++  --> post increment
2.++a --> pre increment
3.a-- --> post decrement
4.--a  --> pre decrement

EXAMPLE CODE
#include <stdio.h>
int main() {
int a=1;
printf("\n pre increment :%d",++a);
printf("\n post increment :%d",a++);
printf("\n A :%d",a);
printf("\n pre decrement :%d",--a);
printf("\n post decrement :%d",a--);
printf("\n A :%d",a);
return 0;
}

OUTPUT:

pre increment :2
 post increment :2
 A :3
 pre decrement :2
 post decrement :2
 A :1

-->BITWISE OPERATOR(&,|,^,~,<<,>>)
1.  &  -->  AND OPERATION
2.  |  -->  OR 
3.  ^  -->  XOR
4.  ~  -->  NOT
5.  <<  --> SHIFT LEFT
6.  >>  --> SHIFT RIGHT

EXAMPLE CODE:
#include <stdio.h>
int main()
{
int a=25,b=45,c,d,e;
printf("\n bitwise AND :%d",a&b);
printf("\n bitwise OR  :%d",a|b);
printf("\n bitwise XOR :%d",a^b);
printf("\n bitwise not :%d",~a);
c=10;
d=c<<2;
e=c>>2;
printf("\n left shift: %d",d);
printf("\n right shift: %d",e);
    return 0;
}

OUTPUT:

bitwise AND :9
 bitwise OR  :61
 bitwise XOR :52
 bitwise not :-26
 left shift: 40
 right shift: 2

----------------------------------------

-->CONTROL STATEMENT 
1. IF  STATEMENT-->( if, if else, else if ladder, nested if).
2.SWITCH STATEMENT
3.CONDITIONAL OPERATOR STATEMENT
4.LOOP  STATEMENT-->( for, while, do while).
5.GOTO  STATEMENT

-------------------------

1. IF  STATEMENT

a) if condition(condition satisfy it will execute the code otherwise stop the execution).

SYNTAX:
if(condition)
{
statement;
}


EXAMPLE CODE:

#include <stdio.h>
int main()
{
char name[10];
int age;
printf("\n enter your name:");
scanf("%s",name);
printf("\n enter your age:");
scanf("%d",&age);
if(age>=18)
{
    printf("\n %s age is %d so eligible for vote",name,age);
}
    return 0;
}

OUTPUT:
enter your name:ram
enter your age:25
ram age is 25 so eligible for vote

-----------------------------------------------------------

b) if else condition

SYNTAX:

if(condition)
{
statement;
}
else
{
statement;
}


EXAMPLE CODE:

#include <stdio.h>
int main()
{
char name[10];
int age;
printf("\n enter your name:");
scanf("%s",name);
printf("\n enter your age:");
scanf("%d",&age);
if(age>=18)
{
    printf("\n %s age is %d so eligible for vote",name,age);
}
else
{
    printf("\n %s age is %d so not eligible for vote",name,age);
}
    return 0;
}

OUTPUT:
//if :
enter your name:krish
enter your age:45
krish age is 45 so eligible for vote

//else:
enter your name:krish
enter your age:12
krish age is 12 so not eligible for vote

-----------------------------------------------------------------------------------

c)else if ladder

SYNTAX:
if(condition)
{
statement;
}
elseif(condition)
{
statement;
}
else
{
statement;
}

EXAMPLE CODE:
#include <stdio.h>
int main()
{
int a;
printf("\n enter any value:");
scanf("%d",&a);
if(a<0)
{
    printf("\n %d is a negative value.", a);
}
else if (a==0)
{
    printf("\n the given value is 0");
}
else if(a>0)
{
 printf("\n %d is a positive value.", a);    
}
    return 0;
}

OUTPUT:

enter any value:12
12 is a positive value.

enter any value:0
the given value is 0

-------------------------------------------------------------------------

D) nested if condition

SYNTAX:

if(condition)
{
if(condition)
{
statement;
}
}

EXAMPLE CODE:

#include <stdio.h>

int main() {
   int year;
   printf("\n enter the year:");
   scanf("%d",&year);
   if(year%100==0)
   {
       if(year%400==0)
       {
           printf("\n %d is a leap year",year);
       }
       else
       {
            printf("\n %d is a not leap year",year);
       }
   }
       else
       {
       if(year%4==0)
       {
            printf("\n %d is a leap year",year);
       }
       else
       {
            printf("\n %d is a not leap year",year);
       }
   }
      
   

    return 0;
}

OUTPUT:
enter the year:2034
2034 is a not leap year

enter the year:2000
2000 is a leap year

-----------------------------------------------------------------------------

2.SWITCH STATEMENT

SYNTAX:

switch(choice)
{
case value:
....
break;
case value:
....
break;
default:
....
break;
}

(or)

 switch( expression ) 
{
case value-1:
Block-1; 
Break; 
case value-2: 
Block-2; 
Break; 
case value-n:
Block-n;
Break;
default:
Block-1;
Break; 
} 
Statement-x;

EXAMPLE CODE:

#include <stdio.h>

int main() {
  int ch;
  printf("\n enter the value:");
  scanf("%d",&ch);
  switch(ch)
  {
      case 1:
      printf("\n One");
      break;
       case 2:
      printf("\n two");
      break;
       case 3:
      printf("\n three");
      break;
      default:
      printf("\n invalid number");
      break;
  }

    return 0;
}

OUTPUT:

enter the value:1
One

enter the value:2
two

enter the value:5
invalid number

------------------------------------------------------------------

3.CONDITIONAL STATEMENT:

SYNTAX:
condition?true statement:false statement;

EXAMPLE CODE:

#include <stdio.h>

int main() {
  int a,b,c;
  printf("\n enter the A and B value:");
  scanf("%d%d",&a,&b);
  c=a>b?a:b;
  printf("\n the greatest number is:%d",c);
    return 0;
}

OUTPUT:

enter the A and B value:23
12

the greatest number is:23

-------------------------------------------------------------------

GOTO LABEL STATEMENT IN C

-->goto label sample program

#include <stdio.h>

int main() {
    int i=0;
    run:
    printf("\n %d",i);
    i++;
    if(i!=5)
    {
        goto run;
    }
printf("\n end ");
    return 0;
}

OUTPUT:

0
 1
 2
 3
 4
 end
--------------------------------------------------------------------

example for goto label

#include <stdio.h>

int main() {
    int ch,qty,i, net=0;
    run:
    printf("\n menu card:");
    printf("\n\t\t 1.coffee        rs.15");
    printf("\n\t\t 2.tea           rs.10");
    printf("\n\t\t 3.cold coffee   rs.25");
    printf("\n\t\t 4.milk shake    rs.50");
    printf("\nenter your choice:");
    scanf("%d",&ch);
    switch(ch)
    {
    case 1:
    printf("\n you have selected coffee");
    printf("\n Enter the quantity:");
    scanf("%d",&qty);
    net=net+(qty*15);
    break;
      case 2:
    printf("\n you have selected tea");
    printf("\n Enter the quantity:");
    scanf("%d",&qty);
   net=net+(qty*10);
    break;
      case 3:
    printf("\n you have selected cold coffee ");
    printf("\n Enter the quantity:");
    scanf("%d",&qty);
     net=net+(qty*25);
    break;
      case 4:
    printf("\n you have selected milk shake ");
    printf("\n Enter the quantity:");
    scanf("%d",&qty);
    net=net+(qty*50);
    break;
    defaut:
    printf("\n invalid enter the above number(1,2,3,4):");
    break;
    }
    printf("\n do you want to continue press 1:");
    scanf("%d",&i);
    if(i==1)
    {
        goto run;
    }
    printf("\n total amount:%d",net);
    printf("\n thank you for coming");
    return 0;
    }


 OUTPUT:

menu card:
		 1.coffee        rs.15
		 2.tea           rs.10
		 3.cold coffee   rs.25
		 4.milk shake    rs.50
enter your choice:3
you have selected cold coffee 
 Enter the quantity:2
 do you want to continue press 1:1
 menu card:
		 1.coffee        rs.15
		 2.tea           rs.10
		 3.cold coffee   rs.25
		 4.milk shake    rs.50
enter your choice:2
you have selected tea
 Enter the quantity:3
 do you want to continue press 1:0
 total amount:80
 thank you for coming


-----------------------------------------------------------------------

-->LOOPING STATEMENT
1.ENTRY CHECK LOOP
     WHILE
     FOR
2.EXIT CHECK LOOP
      DO WHILE
---------------------------------------------------

--> WHILE LOOP 
SYNTAX:
while(condition)
{
statement();
}

EXAMPLE CODE:

#include <stdio.h>

int main() {
    int i=1,n;
    printf("\n enter the limit:");
    scanf("%d",&n);
    while(i<=n)
    {
        printf("\n%d",i);
        i++;
    }
    return 0;
}

OUTPUT:

enter the limit:3
1
2
3

------------------------------------------------------------

-->DO WHILE LOOP

SYNTAX:
do
{
statement();
}
while(condition)
{
statement();
}

EXAMPLE CODE:
#include <stdio.h>

int main() {
    int i=0,n;
    printf("\n enter the limit:");
    scanf("%d",&n);
    do{
        printf("\n%d",i);
        i+=2;
    }
    while(i<=n);
    return 0;
}

OUTPUT:

enter the limit:20
0
2
4
6
8
10
12
14
16
18
20

----------------------------------------------------------

--> FOR LOOP 

SYNTAX:

for(initialization;condition;increment)
{
statement();
}

EXAMPLE CODE:

#include <stdio.h>

int main() {
    int i,n;
    printf("\n enter the limit:");
    scanf("%d",&n);
    for(i=1;i<=n;i+=2)
    {
        printf("\n%d",i);
    }
    return 0;
}

OUTPUT:

enter the limit:10
1
3
5
7
9
----------------------------------------

--> NESTED FOR LOOP( is used to draw pattern )


EXAMPLE CODE:

#include <stdio.h>

int main() {
    int i,j;
    for(i=0;i<5;i++)
    {
        for(j=0;j<5;j++)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;
}

OUTPUT:

*****
*****
*****
*****
*****

ANOTHER EXAPMLE FOR NESTED LOOP

CODE:
#include <stdio.h>

int main() {
    int i,j;
    for(i=0;i<5;i++)
    {
        for(j=0;j<i;j++)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;
}
OUTPUT:

*
**
***
****


-----------------------------------------
BREAK AND CONTINUE IN C PROGRAM

EXAMPLE CODE:
#include <stdio.h>

int main() {
    int i;
    for(i=1;i<=10;i++)
    {
          if(i==8)
            break;
            if(i==3)
            continue;
        printf("\n %d",i);
        
    }
    return 0;
}
OUTPUT:

1
 2
 4
 5
 6
 7

------------------------------------------


-->ARRAYS IN C PROGRAM
type 
1.one dimension 
2.two dimention 


EXAMPLE CODE FOR ONE DIMENSION ARRAY:

#include <stdio.h>

int main() {
   int i,a[100],n;
   printf("\n enter the limit:");
   scanf("%d",&n);
   for(i=0;i<n;i++)
   {
       printf("\n enter the value:");
       scanf("%d",&a[i]);
   }
    for(i=0;i<n;i++)
    {
   printf("\n %d",a[i]);
    }
    return 0;
}

OUTPUT:

enter the limit:3
enter the value:10
enter the value:20
enter the value:30
10
 20
 30

------------------------------------------------------------------------
 






















